package com.example.CarCatalog.view;

import com.example.CarCatalog.model.Car;
import org.springframework.stereotype.Component;

import java.util.List;
import java.util.Scanner;

@Component
public class CarView {

    public static final String RESET = "\u001B[0m";
    public static final String RED = "\u001B[31m";
    public static final String GREEN = "\u001B[32m";
    public static final String YELLOW = "\u001B[33m";
    public static final String BLUE = "\u001B[34m";
    public static final String PURPLE = "\u001B[35m";
    public static final String CYAN = "\u001B[36m";
    public static final String WHITE = "\u001B[37m";

    public void showMenu() {
        System.out.println(CYAN + "===============================================");
        System.out.println(RED + "                üöó KATALOG AUT üöó              ");
        System.out.println(CYAN + "===============================================\n");
        System.out.println(RED + "               Wybierz opcjƒô z menu:            ");
        System.out.println(CYAN + "------------------------------------------------");
        System.out.println(YELLOW + "  1. üìú  Wypisz wszystkie auta                   ");
        System.out.println(CYAN + "------------------------------------------------");
        System.out.println(GREEN + "  2. ‚ûï  Dodaj nowe auto                          ");
        System.out.println(CYAN + "------------------------------------------------");
        System.out.println(RED + "  3. ‚ùå  Usu≈Ñ auto z listy                       ");
        System.out.println(CYAN + "------------------------------------------------");
        System.out.println(BLUE + "  4. üîç  Wypisz auto o podanym ID                ");
        System.out.println(CYAN + "------------------------------------------------");
        System.out.println(BLUE + "  5. üîç  Wypisz auta danej marki                  ");
        System.out.println(CYAN + "------------------------------------------------");
        System.out.println(BLUE + "  6. üîç  Wypisz auta o podanej wersji nadwozia                  ");
        System.out.println(CYAN + "------------------------------------------------");
        System.out.println(WHITE + "  7. üö™  Wyjd≈∫ z programu                        ");
        System.out.println(CYAN + "------------------------------------------------");
        System.out.println(CYAN + "===============================================");
        System.out.print(PURPLE + "   Wyb√≥r: " + RESET);
    }


    public void displayCarDetails(Car car) {
        System.out.println(CYAN + "========================================================================================");
        System.out.println(BLUE + "Marka: "+ YELLOW + car.getBrand() + BLUE + " Model: " + YELLOW + car.getModel() + BLUE +"\nWersja: "+ YELLOW + car.getVersion() + BLUE + "\nRocznik: " + YELLOW + car.getYear() + BLUE +"\nPrzebieg: " + YELLOW + car.getMileage() +
        BLUE + "\nKolor: " + YELLOW + car.getColor() + BLUE +"\nMoc: " + YELLOW + car.getPower() + "kM" + BLUE + "\nCena: " + YELLOW + car.getPrice() + "Zl" + BLUE + "\nId pojazdu: " + RED + car.getId() + RESET);
        System.out.println(CYAN + "========================================================================================" + RESET);
    }

    public void listCars(List<Car> cars) {
        for (Car car : cars) {
            displayCarDetails(car);
        }
    }

    public Car addCar(Scanner scanner) {
        System.out.println(PURPLE + "Wprowadz marke: ");
        String brand = scanner.nextLine();
        System.out.println("Wprowadz model: ");
        String model = scanner.next();
        System.out.println("Wprowadz Wersje nadwozia: ");
        String version = scanner.next();
        System.out.println("Wprowadz rocznik: ");
        int year = scanner.nextInt();
        System.out.println("Wprowadz przebieg: ");
        double mileage = scanner.nextDouble();
        System.out.println("Wprowadz moc: ");
        int power = scanner.nextInt();
        System.out.println("Wprowadz kolor: ");
        String color = scanner.next();
        System.out.println("Wprowadz cene: " + RESET);
        double price = scanner.nextDouble();

        Car car = new Car();
        car.setBrand(brand);
        car.setModel(model);
        car.setVersion(version);
        car.setYear(year);
        car.setMileage(mileage);
        car.setPower(power);
        car.setColor(color);
        car.setPrice(price);

        return car; // Zwr√≥cenie obiektu Car do kontrolera
    }

    public void displayCarAdded() {
        System.out.println(GREEN + "Auto dodane!" + RESET);
    }

    public long promptForCarId(Scanner scanner) {
        System.out.println(PURPLE + "Podaj id auta: " + RESET);
        return scanner.nextLong();
    }

    public void displayCarRemoved(long id) {
        System.out.println(GREEN + "Auto o id " + YELLOW + id + GREEN + " zosta≈Ço " + RED + "usuniƒôte" + GREEN + "." + RESET);
    }

    public void displayCarNotFound(long id) {
        System.out.println(RED + "Auto o id " + YELLOW + id + RED + " nie zosta≈Ço znalezione." + RESET);
    }

    public void displayInvalidOption() {
        System.out.println(RED + "Wprowadzono nieprawid≈Çowe dane." + RESET);
    }

    public void displayPromptForBrandSearch(){
        System.out.println(PURPLE + "Podaj marke auta, ktore chcesz wyszukac." + RESET);
    }

    public void displayPromptForVersionSearch(){
        System.out.println(PURPLE + "Podaj wersje nadwozia, ktora chcesz wyszukac." + RESET);
    }

    public void displayCarBrand(String brand) {
        if (brand.equals("Audi"))
        {
                    System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£Ä‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£Ä‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£Ä‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£Ä‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
                    System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£¥‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£¶‚£Ñ‚£Ä‚£¥‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£¶‚£Ñ‚£Ä‚£¥‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£¶‚£Ñ‚£Ä‚£¥‚£∂‚£ø‚£ø‚£ø‚£∑‚£¶‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä");
                    System.out.println("‚†Ä‚†Ä‚£†‚£æ‚£ø‚°ø‚†õ‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†õ‚£ø‚£ø‚£ø‚£ø‚†õ‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†õ‚£ø‚£ø‚£ø‚£ø‚†õ‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†õ‚£ø‚£ø‚£ø‚£ø‚†õ‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†â‚†õ‚¢ø‚£ø‚£∑‚£Ñ‚†Ä‚†Ä");
                    System.out.println("‚†Ä‚£∞‚£ø‚°ø‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚£ø‚£ø‚¢ø‚£ø‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£¥‚£ø‚°ø‚¢ø‚£ø‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚£ø‚°ø‚¢ø‚£ø‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä    ‚†ô‚¢ø‚£ø‚£ß‚†Ä");
                    System.out.println("‚¢∞‚£ø‚£ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚£ø‚£ø‚†Å‚†à‚¢ø‚£ø‚£á‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚£ø‚£ø‚†Å‚†à‚¢ø‚£ø‚£á‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚£ø‚£ø‚†Å ‚†à‚¢ø‚£ø‚£á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä   ‚†à‚¢ø‚£ø‚£á");
                    System.out.println("‚£æ‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£æ‚£ø‚°á‚†Ä‚†Ä ‚¢∏‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚°á‚†Ä‚†Ä ‚¢∏‚£ø‚£ø‚†Ä‚†Ä‚†Ä ‚£ø‚£ø‚°á‚†Ä‚†Ä ‚¢∏‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä   ‚¢∏‚£ø‚£ø");
                    System.out.println("‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ø‚£ø‚°á‚†Ä‚†Ä ‚¢∏‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚°á‚†Ä‚†Ä ‚¢∏‚£ø‚£ø‚†Ä‚†Ä‚†Ä ‚£ø‚£ø‚°á‚†Ä‚†Ä ‚¢∏‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä   ‚¢∏‚£ø‚£ø");
                    System.out.println("‚†∏‚£ø‚£ø‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚£ø‚£ø‚°Ä‚†Ä‚£æ‚£ø‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚°Ä‚¢Ä‚£æ‚£ø‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚£ø‚£ø‚°Ä‚†Ä ‚£æ‚£ø‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä   ‚£æ‚£ø‚°è");
                    System.out.println("‚†Ä‚†ª‚£ø‚£∑‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ª‚£ø‚£∑‚£æ‚£ø‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ª‚£ø‚£∑‚£æ‚£ø‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ª‚£ø‚£∑‚£æ‚£ø‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä    ‚¢†‚£æ‚£ø‚°ü‚†Ä");
                    System.out.println("‚†Ä‚†Ä‚†ô‚¢ø‚£ø‚£∑‚£§‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£†‚£ø‚£ø‚£ø‚£ø‚£§‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£†‚£ø‚£ø‚£ø‚£ø‚£§‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£†‚£ø‚£ø‚£ø‚£ø‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä    ‚£æ‚£ø‚°ø‚†ã‚†Ä‚†Ä");
                    System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ü‚†ã‚†â‚†ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ü‚†ã‚†â‚†ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ü‚†ã‚†â‚†ª‚¢ø‚£ø‚£ø‚£ø‚°ø‚†ü‚†ã‚†Ä‚†Ä‚†Ä‚†Ä");
                    System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†â‚†â‚†â‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†â‚†â‚†â‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†â‚†â‚†â‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†â‚†â‚†â‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
        }
        else if (brand.equals("Ford"))
        {
            System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£Ä‚£Ä‚£Ä‚†Ä‚†Ä‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚†Ä‚¢Ä‚£Ä‚£Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
            System.out.println("‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚°§‚¢ñ‚£õ‚£≠‚£Ω‚£∂‚†∂‚†æ‚†õ‚†ª‚†ø‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£∂‚£Ø‚£≠‚£ó‚°≤‚¢§‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä");
            System.out.println("‚†Ä‚£†‚¢ñ‚£ø‚£∑‚£ø‚£ø‚£ø‚£ø‚°ü‚¢°‚£æ‚¢ø‚£ø‚°ø‚£Ø‚¢∂‚£∂‚£§‚£§‚£§‚£§‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£æ‚£ø‚°≤‚£Ñ‚†Ä");
            System.out.println("‚£æ‚¢≥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£Ñ‚£§‚£æ‚†ã‚£∏‚£ø‚£©‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚¢É‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚°é‚¢ß");
            System.out.println("‚£ø‚°∏‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚£∞‚£ø‚£ø‚°ø‚¢Å‚£º‚†ü‚£±‚£æ‚†â‚£´‚°Ü‚†à‚£Ñ‚°Ω‚¢ã‚£¥‚°é‚¢°‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢á‚°æ");
            System.out.println("‚†à‚†ª‚£ø‚£ø‚¢ø‚£ø‚£ø‚£á‚†ô‚†õ‚¢ã‚£†‚£æ‚£Ø‚°Ä‚†ø‚¢ã‚£¥‚°ü‚£†‚£∑‚£≠‚°Ü‚†∫‚¢ü‚†Ä‚¢æ‚£Ø‚£ø‚£ø‚£ø‚°ø‚£ø‚°ø‚†ü‚†Å");
            System.out.println("‚†Ä‚†Ä‚†Ä‚†â‚†õ‚†æ‚£≠‚£ü‚£ª‚†ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°∑‚†ø‚£ü‚£õ‚£≠‚†∑‚†õ‚†â‚†Ä‚†Ä‚†Ä");
            System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†â‚†â‚†í‚†í‚†ö‚†ª‚†ø‚†ø‚†ø‚†ø‚†ø‚†ø‚†ü‚†õ‚†õ‚†í‚†í‚†â‚†â‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
        }
        else if (brand.equals("BMW"))
        {
            System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚£§‚£§‚†∂‚¢∂‚°∂‚†∂‚£§‚£§‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
            System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£§‚£æ‚£ø‚£ø‚£ø‚£ø‚†Ä‚°∏‚¢á‚†Ä‚£ø‚£ø‚£ø‚£ø‚£∑‚£§‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä");
            System.out.println("‚†Ä‚†Ä‚†Ä‚£¥‚¢è‚°â‚†ª‚¢ø‚£ø‚£ø‚£ø‚†§‚†ß‚†º‚†§‚£ø‚£ø‚£ø‚£ø‚†ü‚¢©‚†ø‚£¶‚†Ä‚†Ä‚†Ä");
            System.out.println("‚†Ä‚¢Ä‚£æ‚£Ö‚†ò‚¢°‚†Ü‚°¥‚†õ‚¢â‚£†‚£§‚£∂‚†Ä‚†Ä‚†Ä‚†â‚†õ‚¢Ø‚£†‚†î‚††‚†ö‚£∑‚°Ä‚†Ä");
            System.out.println("‚†Ä‚£æ‚£ø‚£ø‚£∑‚£¶‚°û‚¢Ä‚£¥‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ª‚£§‚£∂‚£ø‚£ø‚£∑‚†Ä");
            System.out.println("‚¢†‚£ø‚£ø‚£ø‚£ø‚°ü‚†Ä‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ª‚£ø‚£ø‚£ø‚£ø‚°Ñ");
            System.out.println("‚¢∏‚£ø‚£ø‚£ø‚£ø‚°á‚†ò‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚£§‚£§‚£§‚£§‚£§‚£§‚°Ñ‚¢∏‚£ø‚£ø‚£ø‚£ø‚°á");
            System.out.println("‚†ò‚£ø‚£ø‚£ø‚£ø‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†Ä‚£º‚£ø‚£ø‚£ø‚£ø‚†É");
            System.out.println("‚†Ä‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚£ø‚†ü‚†Å‚£º‚£ø‚£ø‚£ø‚£ø‚°ø‚†Ä");
            System.out.println("‚†Ä‚†à‚¢ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£§‚£Ä‚†Ä‚†Ä‚†Ä‚†ø‚†õ‚†ã‚£Å‚£§‚£æ‚£ø‚£ø‚£ø‚£ø‚°ø‚†Å‚†Ä");
            System.out.println("‚†Ä‚†Ä‚†Ä‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£∂‚£∂‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚†Ä‚†Ä‚†Ä");
            System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†õ‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†õ‚†Å‚†Ä‚†Ä‚†Ä‚†Ä");
            System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ô‚†õ‚†õ‚†ø‚†ø‚†ø‚†ø‚†ø‚†õ‚†õ‚†ã‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
        }
        else if (brand.equals("Opel"))
        {
                    System.out.println("                       _ ");
                    System.out.println("                      | |");
                    System.out.println("  ___  _ __     ___   | |");
                    System.out.println(" / _ \\| '_ \\ / _ \\ |");
                    System.out.println("| (_) | |_) |  __/    | |__");
                    System.out.println(" \\___/| .__/ \\___   |____|");
                    System.out.println("      | |           ");
                    System.out.println("      |_|           ");
        }
    }
}
